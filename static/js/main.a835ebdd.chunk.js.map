{"version":3,"sources":["components/assets/imgs/icon.png","components/banner-login/Banner.js","components/banner-login/Navigation.js","components/banner-login/Login.js","components/assets/imgs/edit.png","components/cart/CartItem.js","components/cart/Cart.js","components/menu/NewMenuItem.js","components/menu/EditMenuItem.js","components/assets/imgs/plus.png","components/assets/imgs/minus.png","components/menu/CrudMenu.js","components/own-pizza/OwnPizzaCartItem.js","components/own-pizza/OwnPizzaCart.js","components/own-pizza/OwnPizzaIng.js","components/own-pizza/OwnPizzaMenu.js","components/assets/imgs/remove.png","components/menu/MenuItem.js","components/menu/Menu.js","components/RestoApp.js","App.js","reportWebVitals.js","redux/cartSlice.js","redux/menuSlice.js","redux/loginSlice.js","redux/ownPizzaSlice.js","components/assets/imgs/pizzaIng/Bacon.PNG","components/assets/imgs/pizzaIng/Beef.PNG","components/assets/imgs/pizzaIng/Green-Bell-Pepper.PNG","components/assets/imgs/pizzaIng/Ham.PNG","components/assets/imgs/pizzaIng/Mozzarella-Cheese.PNG","components/assets/imgs/pizzaIng/Parsley-Leaves.PNG","components/assets/imgs/pizzaIng/Pepperoni.PNG","components/assets/imgs/pizzaIng/Pineapple-Chunks.PNG","components/assets/imgs/pizzaIng/mushroom.png","redux/reducer.js","redux/store.js","index.js"],"names":["Banner","className","src","Logo","alt","connect","state","currentUser","loginSlice","dispatch","activatePage","item","type","payload","logoutUser","logoutReset","adminAutoLogin","props","onClick","userType","activePage","menuSlice","validateUser","username","password","useState","setUsername","setPassword","useEffect","value","onChange","e","target","errorMsg","removeItem","cartItem","addQty","deductQty","submitPizzaForEdit","name","subCtgry","Edit","quantity","price","toLocaleString","useGrouping","cart","cartSlice","total","clearCart","map","id","newItemBox","newItemMsg","categoryArray","createNewItem","setName","setPrice","category","setCategory","imageSrc","setImgSrc","min","index","findIndex","categoryName","categoryNum","status","image","itemForEdit","editItemMsg","editItem","editedItem","setEditBoxDisplay","editItemBox","setNewItemBoxDisplay","AddImg","HideImg","maxServing","deductIngQty","ingItem","addIngQty","removeIngItem","qty","ingType","mainPizzaIngLength","ownPizzaIngCart","ownPizzaIngTotal","pizzaForEdit","clearPizzaCart","addPizzaToCart","pizzaName","resendPizzaToCart","cancelEdit","itemName","editChecker","setPizzaName","submitDisableStatus","setSubmitDisableStatus","submitDisableStatusChecker","length","cartIng","disabled","addToPizzaCart","ing","itemIndex","currentQty","btnStatus","img","pizzaIng","ownPizzaSlice","filter","addToCart","deleteItem","submitItemForEditing","setQty","menuItem","Remove","origMenu","filteredMenu","setFilteredMenu","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","mainPizzaIng","mainPizzaIngTotal","forEach","initialState","newTotal","cartCopy","ownPizzaIngCartCopy","action","Lodash","cloneDeep","push","splice","itemCopy","newItem","uuidv4","details","pizzaForEditCopy","origMenuCopy","compare","trim","a","b","sort","savedUsername","localStorage","getItem","savedUserType","users","msg","userIndex","currentUserCopy","account","setItem","clear","rootReducer","combineReducers","store","createStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a835ebdd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon.8fb776d8.png\";","import Logo from \"../assets/imgs/icon.png\"\r\n\r\nconst Banner = () => {\r\n    return(\r\n        <div className=\"banner\">\r\n            <div>\r\n                <div>\r\n                    <img src={Logo} alt=\"logo\" />\r\n                </div>\r\n                <h1>Munch Time!</h1>\r\n            </div>\r\n            <div>\r\n                <div>on-the-go</div>\r\n                <div>food</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Banner;","import { connect } from \"react-redux\";\r\n\r\nconst Navigation = (props) => {\r\n    const logoutBtnHandler = () => {\r\n        props.logoutUser();\r\n        props.logoutReset();\r\n    }\r\n    return(\r\n        <div className=\"navigation\">\r\n            <div>\r\n                <button onClick={() => props.activatePage(\"Menu\")}>Menu</button>\r\n                {\r\n                    props.currentUser.userType === \"customer\" ?\r\n                    <button onClick={() => props.activatePage(\"OwnPizza\")}>Create My Own Pizza</button>\r\n                    :\r\n                    null\r\n                }\r\n            </div>\r\n            {\r\n                props.currentUser.userType === \"customer\" ?\r\n                <button onClick={props.adminAutoLogin}>Admin Login</button>\r\n                :\r\n                <div>\r\n                    <button onClick = {logoutBtnHandler}>Logout</button>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currentUser: state.loginSlice.currentUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        activatePage: (item) => dispatch({\r\n            type: \"ACTIVATE_PAGE\",\r\n            payload: item\r\n        }),\r\n        logoutUser: () => dispatch({\r\n            type: \"LOGOUT_USER\"\r\n        }),\r\n        logoutReset: () => dispatch({\r\n            type: \"LOGOUT_RESET\"\r\n        }),\r\n        adminAutoLogin: () => dispatch({\r\n            type: \"ADMIN_AUTO_LOGIN\"\r\n        })\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation);","import { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Login = ({activatePage, validateUser, currentUser}) => {\r\n\r\n    let [username, setUsername] = useState(\"\");\r\n    let [password, setPassword] = useState(\"\");\r\n\r\n    const usernameChangeHandler = (e) => {\r\n        setUsername(e.target.value)\r\n    };\r\n    const passwordChangeHandler = (e) => {\r\n        setPassword(e.target.value)\r\n    };\r\n    const submitBtnHandler = () => {\r\n        validateUser(username, password)\r\n        setUsername(\"\");\r\n        setPassword(\"\");\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (currentUser.userType === \"admin\") {\r\n            activatePage(\"Menu\")\r\n        }\r\n    }, [currentUser.userType, activatePage])\r\n\r\n    return(\r\n        <div className=\"login-div\">\r\n            {\r\n                currentUser.userType === \"customer\" ?\r\n                <div>\r\n                    <h2>Login</h2>\r\n                    <div>Username</div>\r\n                    <input\r\n                        type = \"text\"\r\n                        value = {username}\r\n                        onChange = {usernameChangeHandler}\r\n                        />\r\n                    <div>Password</div>\r\n                    <input\r\n                        type=\"password\"\r\n                        value = {password}\r\n                        onChange = {passwordChangeHandler}\r\n                    />\r\n                    <div className=\"error-msg\">{currentUser.errorMsg}</div>\r\n                    <button onClick = {submitBtnHandler}>Login</button>\r\n                </div>\r\n                :\r\n                null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currentUser: state.loginSlice.currentUser,\r\n        activePage: state.menuSlice.activePage\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        validateUser: (username, password) => dispatch({\r\n            type: \"VALIDATE_USER\",\r\n            payload: {\r\n                username,\r\n                password\r\n            }\r\n        }),\r\n        activatePage: (item) => dispatch({\r\n            type: \"ACTIVATE_PAGE\",\r\n            payload: item\r\n        })\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","export default __webpack_public_path__ + \"static/media/edit.bd176f6f.png\";","import { connect } from \"react-redux\";\r\nimport Edit from \"../assets/imgs/edit.png\";\r\n\r\nconst CartItem = (props) => {\r\n    const editBtnHandler = () => {\r\n        props.submitPizzaForEdit(props.cartItem);\r\n        props.activatePage(\"OwnPizza\")\r\n    }\r\n    return(\r\n        <div className={\"cart-item-row \"}>\r\n            <div>{props.cartItem.name}\r\n                {\r\n                    props.cartItem.subCtgry === \"OwnPizza\" ?\r\n                    <button onClick={editBtnHandler}>\r\n                        <img src={Edit} alt=\"edit\" />\r\n                    </button>\r\n                    :\r\n                    null\r\n                }\r\n            </div>\r\n            <div className=\"qtybtncol\">\r\n                <button className=\"deductQtyBtn\" onClick={() => props.deductQty(props.cartItem)}>-</button>\r\n            </div>\r\n            <div>{props.cartItem.quantity}</div>\r\n            <div className=\"qtybtncol\">\r\n                <button className=\"addQtyBtn\" onClick={() => props.addQty(props.cartItem)}>+</button>\r\n            </div>\r\n            <div>{props.cartItem.price.toLocaleString('en', {useGrouping:true})}</div>\r\n            <div>{(props.cartItem.price * props.cartItem.quantity).toLocaleString('en', {useGrouping:true})}</div>\r\n            <div className=\"qtybtncol\">\r\n                <button onClick={() => props.removeItem(props.cartItem)}>-</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        removeItem: (cartItem) => dispatch({\r\n            type: \"REMOVE_ITEM\",\r\n            payload: cartItem\r\n        }),\r\n        addQty: (cartItem) => dispatch({\r\n            type: \"ADD_QTY\",\r\n            payload: cartItem\r\n        }),\r\n        deductQty: (cartItem) => dispatch({\r\n            type: \"DEDUCT_QTY\",\r\n            payload: cartItem\r\n        }),\r\n        submitPizzaForEdit: (cartItem) => dispatch({\r\n            type: \"SUBMIT_PIZZA_FOR_EDIT\",\r\n            payload: cartItem\r\n        }),\r\n        activatePage: (item) => dispatch({\r\n            type: \"ACTIVATE_PAGE\",\r\n            payload: item\r\n        })\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(CartItem);","import CartItem from \"./CartItem\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Cart = (props) => {\r\n    return(\r\n        <div className=\"cart\">\r\n            <div>\r\n                <h2>Cart</h2>\r\n                {\r\n                    props.total !== 0 ?\r\n                    <div className=\"cart-details\">\r\n                        <div className=\"cart-table\">\r\n                            <div className=\"cart-item-row heading\">\r\n                                <div>Item</div>\r\n                                <div className=\"qtybtncol\"></div>\r\n                                <div>Qty</div>\r\n                                <div className=\"qtybtncol\"></div>\r\n                                <div>Price</div>\r\n                                <div>Amt</div>\r\n                                <div className=\"qtybtncol\"></div>\r\n                            </div>\r\n                            {\r\n                                props.cart.map ( cartItem => \r\n                                    <CartItem\r\n                                        key={cartItem.id}\r\n                                        cartItem={cartItem}\r\n                                    />\r\n                                )\r\n                            }\r\n                            <div>\r\n                                <div className=\"total-cost-div\">\r\n                                    <div>Total Amount</div>\r\n                                    <div>Php {props.total.toLocaleString('en', {useGrouping:true})}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <div className=\"no-item\">No items in the cart.</div>\r\n                }\r\n            </div>\r\n            {\r\n                props.total > 0 ?\r\n                <div className=\"clear-cart-div\">\r\n                    <button onClick={props.clearCart}>Clear Cart</button>\r\n                </div>\r\n                :\r\n                null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        cart: state.cartSlice.cart,\r\n        total: state.cartSlice.total\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        clearCart: () => dispatch({type: \"CLEAR_CART\"})\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart)","import { useState } from \"react\"\r\nimport { connect } from \"react-redux\";\r\n\r\nconst NewMenuItem = (props) => {\r\n    let [name, setName] = useState(\"\");\r\n    let [price, setPrice] = useState(1);\r\n    let [category, setCategory] = useState(\"Food\");\r\n    let [imageSrc, setImgSrc] = useState(\"\");\r\n\r\n    const nameChangeHandler = (e) => {\r\n        setName(e.target.value);\r\n    };\r\n    const priceChangeHandler = (e) => {\r\n        setPrice(e.target.value * 1);\r\n    };\r\n    const categoryChangeHandler = (e) => {\r\n        setCategory(e.target.value);\r\n    };\r\n    const imgSrcChangeHandler = (e) => {\r\n        setImgSrc(e.target.value);\r\n    };\r\n    const createBtnHandler = () => {\r\n        let index = props.categoryArray.findIndex( item => item.categoryName === category);\r\n        let item = {\r\n            id: 0,\r\n            name: name,\r\n            price: price,\r\n            category: category,\r\n            categoryNum: props.categoryArray[index].categoryNum,\r\n            status: \"active\",\r\n            image: imageSrc\r\n        };\r\n        setName(\"\");\r\n        setPrice(1);\r\n        setCategory(\"Food\");\r\n        setImgSrc(\"\");\r\n        props.createNewItem(item);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                props.newItemBox === true ?\r\n                <div className=\"crud-menu-item-box create-menu-item\">\r\n                    <h4>Create new menu item</h4>\r\n                    <div>\r\n                        <div>\r\n                            <div>Name:</div>\r\n                            <input\r\n                                type = \"text\"\r\n                                onChange = {nameChangeHandler}\r\n                                value = {name}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <div>Price:</div>\r\n                            <input\r\n                                type = \"number\"\r\n                                onChange = {priceChangeHandler}\r\n                                value = {price}\r\n                                min = {1}\r\n                                />\r\n                        </div>\r\n                        <div>\r\n                            <div>Category:</div>\r\n                            <select\r\n                                onChange = {categoryChangeHandler}\r\n                                value = {category}\r\n                            >\r\n                                <option>Food</option>\r\n                                <option>Drink</option>\r\n                            </select>\r\n                        </div>\r\n                        <div>\r\n                            <div>Image Source:</div>\r\n                            <input\r\n                                type = \"text\"\r\n                                onChange = {imgSrcChangeHandler}\r\n                                value = {imageSrc}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            {props.newItemMsg}\r\n                        </div>\r\n                        <div>\r\n                            <button onClick = {createBtnHandler}>Create</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        newItemBox: state.menuSlice.newItemBox,\r\n        newItemMsg: state.menuSlice.newItemMsg,\r\n        categoryArray: state.menuSlice.categoryArray\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        createNewItem: (item) => dispatch({\r\n            type: \"CREATE_NEW_ITEM\",\r\n            payload: item            \r\n        })\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewMenuItem);","import { connect } from \"react-redux\";\r\nimport {useState} from \"react\";\r\n\r\nconst EditMenuItem = (props) => {\r\n    let [name, setName] = useState(props.itemForEdit.name);\r\n    let [price, setPrice] = useState(props.itemForEdit.price);\r\n    let [category, setCategory] = useState(props.itemForEdit.category);\r\n    let [imageSrc, setImgSrc] = useState(props.itemForEdit.image);\r\n\r\n    const nameChangeHandler = (e) => {\r\n        setName(e.target.value);\r\n    };\r\n    const priceChangeHandler = (e) => {\r\n        setPrice(e.target.value * 1);\r\n    };\r\n    const categoryChangeHandler = (e) => {\r\n        setCategory(e.target.value);\r\n    };\r\n    const imgSrcChangeHandler = (e) => {\r\n        setImgSrc(e.target.value);\r\n    };\r\n\r\n    const saveBtnHandler = () => {\r\n        let index = props.categoryArray.findIndex( item => item.categoryName === category);\r\n        let editedItem = {\r\n            id: props.itemForEdit.id,\r\n            name,\r\n            price,\r\n            category,\r\n            categoryNum: props.categoryArray[index].categoryNum,\r\n            status: \"active\",\r\n            image: imageSrc\r\n        };\r\n        props.editItem(editedItem);\r\n    };\r\n    const cancelBtnHandler = () => {\r\n        props.setEditBoxDisplay();\r\n    };\r\n\r\n    return(\r\n        <div className=\"crud-menu-item-box edit-menu-item\">\r\n            <h4>Edit menu item</h4>\r\n            <div>\r\n                <div>\r\n                    <div>Name:</div>\r\n                        <input\r\n                            type = \"text\"\r\n                            onChange = {nameChangeHandler}\r\n                            value = {name}\r\n                        />\r\n                </div>\r\n                <div>\r\n                    <div>Price:</div>\r\n                    <input\r\n                        type = \"number\"\r\n                        onChange = {priceChangeHandler}\r\n                        value = {price}\r\n                        min = {1}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <div>Category</div>\r\n                    <select\r\n                        onChange = {categoryChangeHandler}\r\n                        value = {category}\r\n                    >\r\n                        <option>Food</option>\r\n                        <option>Drink</option>\r\n                    </select>\r\n                </div>\r\n                <div>\r\n                    <div>Image Source:</div>\r\n                    <input\r\n                        type = \"text\"\r\n                        onChange = {imgSrcChangeHandler}\r\n                        value = {imageSrc}\r\n                    />\r\n                </div>\r\n                <div>{props.editItemMsg}</div>\r\n                <div>\r\n                    <button onClick={saveBtnHandler}>Save</button>\r\n                    <button onClick={cancelBtnHandler}>Cancel</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        categoryArray: state.menuSlice.categoryArray,\r\n        itemForEdit: state.menuSlice.itemForEdit,\r\n        editItemMsg: state.menuSlice.editItemMsg\r\n    };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        editItem: (editedItem) => dispatch({\r\n            type: \"EDIT_ITEM\",\r\n            payload: editedItem\r\n        }),\r\n        setEditBoxDisplay: () => dispatch({\r\n            type: \"SET_EDIT_BOX_DISPLAY\"\r\n        })\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditMenuItem);","export default __webpack_public_path__ + \"static/media/plus.04b527f2.png\";","export default __webpack_public_path__ + \"static/media/minus.8bca3089.png\";","import {connect} from \"react-redux\";\r\nimport NewMenuItem from \"./NewMenuItem\";\r\nimport EditMenuItem from \"./EditMenuItem\";\r\n\r\nimport AddImg from \"../assets/imgs/plus.png\";\r\nimport HideImg from \"../assets/imgs/minus.png\";\r\n\r\nconst CrudMenu = (props) => {\r\n    return(\r\n        <div className=\"create-edit-box\">\r\n            {\r\n                props.editItemBox === false ?\r\n                <div>\r\n                    <button\r\n                        onClick={props.setNewItemBoxDisplay}\r\n                    >\r\n                    {\r\n                        props.newItemBox === false ?\r\n                        <img src={AddImg} alt=\"show\"/>\r\n                        :\r\n                        <img src={HideImg} alt=\"hide\" />\r\n                    }\r\n                    </button>\r\n                    <NewMenuItem />\r\n                </div>\r\n                :\r\n                <EditMenuItem />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currentUser: state.loginSlice.currentUser,\r\n        editItemBox: state.menuSlice.editItemBox,\r\n        newItemBox: state.menuSlice.newItemBox\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setNewItemBoxDisplay: () => dispatch({\r\n            type: \"SET_NEW_ITEM_BOX_DISPLAY\"\r\n        })\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CrudMenu);","import { connect } from \"react-redux\";\r\n\r\nconst OwnPizzaCartItem = (props) => {\r\n    let {id, name, qty, price, ingType} = props.item;\r\n    return(\r\n        <div className={\"cart-item-row \" + id}>\r\n            <div>{name}</div>\r\n            <div className=\"qtybtncol\">\r\n                {\r\n                    ingType === \"Main\" ?\r\n                    null\r\n                    :\r\n                    <button className=\"deductQtyBtn\" onClick={() => props.deductIngQty(props.item)}>-</button>\r\n                }\r\n            </div>\r\n            <div>{qty}</div>\r\n            <div className=\"qtybtncol\">\r\n                {\r\n                    ingType === \"Main\" || qty === props.maxServing ?\r\n                    null\r\n                    :\r\n                    <button className=\"addQtyBtn\" onClick={() => props.addIngQty(props.item)}>+</button>\r\n                }\r\n            </div>\r\n            <div>{price}</div>\r\n            <div>{price * qty}</div>\r\n            <div className=\"qtybtncol\">\r\n                {\r\n                    ingType === \"Main\" ?\r\n                    null\r\n                    :\r\n                    <button onClick={() => props.removeIngItem(props.item)}>-</button>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        maxServing: state.cartSlice.maxServing\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        deductIngQty: (ingItem) => dispatch({\r\n            type: \"DEDUCT_ING_ITEM\",\r\n            payload: ingItem\r\n        }),\r\n        addIngQty: (ingItem) => dispatch({\r\n            type: \"ADD_ING_QTY\",\r\n            payload: ingItem\r\n        }),\r\n        removeIngItem: (ingItem) => dispatch({\r\n            type: \"REMOVE_ING_ITEM\",\r\n            payload: ingItem\r\n        })\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OwnPizzaCartItem);","import { connect } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\nimport OwnPizzaCartItem from \"./OwnPizzaCartItem\";\r\n\r\nconst OwnPizzaCart = (props) => {\r\n    let itemName;\r\n    let editChecker = props.pizzaForEdit === null;\r\n    if (editChecker) {\r\n        itemName = \"My Pizza\"\r\n    }\r\n    else {\r\n        itemName = props.pizzaForEdit.name\r\n    };\r\n    let [pizzaName, setPizzaName] = useState(itemName)\r\n    let [submitDisableStatus, setSubmitDisableStatus] = useState(true)\r\n    let submitDisableStatusChecker = props.ownPizzaIngCart.length <= props.mainPizzaIngLength;\r\n\r\n    useEffect( ()=> {\r\n        setSubmitDisableStatus(submitDisableStatusChecker);\r\n    }, [submitDisableStatusChecker])\r\n\r\n    const pizzaNameChangeHandler = (e) => {\r\n        setPizzaName(e.target.value)\r\n    };\r\n    const sendPizzaBtnHandler = () => {\r\n        props.addPizzaToCart(pizzaName);\r\n        props.activatePage(\"Menu\");\r\n    };\r\n    const sendEditedPizza = () => {\r\n        props.resendPizzaToCart(pizzaName);\r\n        props.activatePage(\"Menu\");\r\n    };\r\n    const cancelEdit = () => {\r\n        props.cancelEdit()\r\n        props.activatePage(\"Menu\");\r\n    };\r\n    \r\n    return(\r\n        <div className=\"cart\">\r\n            <div>\r\n                <div className=\"pizza-name\">\r\n                    <div>Pizza Name:</div>\r\n                    <div>\r\n                        <input\r\n                            type = \"text\"\r\n                            onChange = {pizzaNameChangeHandler}\r\n                            value = {pizzaName}\r\n                            />\r\n                    </div>\r\n                </div>\r\n                {\r\n                    props.ownPizzaIngTotal !== 0 ?\r\n                    <div className=\"cart-details\">\r\n                        <div className=\"cart-table\">\r\n                            <div className=\"cart-item-row heading\">\r\n                                <div>Item</div>\r\n                                <div className=\"qtybtncol\"></div>\r\n                                <div>Serving</div>\r\n                                <div className=\"qtybtncol\"></div>\r\n                                <div>Price</div>\r\n                                <div>Amt</div>\r\n                                <div className=\"qtybtncol\"></div>\r\n                            </div>\r\n                            {\r\n                                props.ownPizzaIngCart.map ( cartIng => \r\n                                    <OwnPizzaCartItem\r\n                                        key = {cartIng.id}\r\n                                        item = {cartIng}\r\n                                    />\r\n                                )\r\n                            }\r\n                            <div>\r\n                                <div className=\"total-cost-div\">\r\n                                    <div>Total Amount</div>\r\n                                    <div>Php {props.ownPizzaIngTotal.toLocaleString('en', {useGrouping:true})}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <div className=\"no-item\">Please choose toppings. :)</div>\r\n                }\r\n            </div>\r\n            {\r\n                props.ownPizzaIngTotal > 0 ?\r\n                <div className=\"own-pizza-clear\">\r\n                    <button onClick={props.clearPizzaCart} disabled = {submitDisableStatus}>Clear</button>\r\n                    {\r\n                        editChecker ?\r\n                        <button\r\n                            onClick = {sendPizzaBtnHandler}\r\n                            disabled = {submitDisableStatus}\r\n                        >Send to Cart\r\n                        </button>\r\n                        :\r\n                        <button\r\n                            onClick={sendEditedPizza}\r\n                            disabled = {submitDisableStatus}\r\n                        >Resubmit to Cart\r\n                        </button>\r\n                    }\r\n                    <button onClick={cancelEdit}>Cancel</button>\r\n                </div>\r\n                :\r\n                null\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        mainPizzaIngLength: state.cartSlice.mainPizzaIngLength,\r\n        ownPizzaIngCart: state.cartSlice.ownPizzaIngCart,\r\n        ownPizzaIngTotal: state.cartSlice.ownPizzaIngTotal,\r\n        pizzaForEdit: state.cartSlice.pizzaForEdit\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        clearPizzaCart: () => dispatch({\r\n            type: \"CLEAR_PIZZA_CART\"\r\n        }),\r\n        addPizzaToCart: (pizzaName, id) => dispatch({\r\n            type: \"ADD_PIZZA_TO_CART\",\r\n            payload: {pizzaName, id}\r\n        }),\r\n        resendPizzaToCart: (name) => dispatch({\r\n            type: \"RESEND_PIZZA_TO_CART\",\r\n            payload: name\r\n        }),\r\n        activatePage: (item) => dispatch({\r\n            type: \"ACTIVATE_PAGE\",\r\n            payload: item\r\n        }),\r\n        cancelEdit: () => dispatch({\r\n            type: \"CANCEL_EDIT\"\r\n        })\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OwnPizzaCart);","import { connect } from \"react-redux\";\r\n\r\nconst OwnPizzaIng = (props) => {\r\n    let itemIndex = props.ownPizzaIngCart.findIndex( item => item.id === props.ing.id)\r\n    let currentQty = itemIndex === -1 ? 0 : props.ownPizzaIngCart[itemIndex].qty\r\n    let btnStatus = props.maxServing === currentQty\r\n\r\n    return(\r\n        <>\r\n            <div className = {\"menu-item-box btn-disabled-\" + btnStatus}>\r\n                <div>\r\n                    <img src={props.ing.img} alt={props.ing.name} />\r\n                </div>\r\n                <div>\r\n                    <p>{props.ing.name}</p>\r\n                    <p>Php {props.ing.price}</p>\r\n                    <button\r\n                        onClick = {() => props.addToPizzaCart(props.ing)}\r\n                        className = \"order-btn own-pizza-btn\"\r\n                        disabled = {btnStatus}\r\n                    >+1 Serving\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n       currentUser: state.loginSlice.currentUser,\r\n       ownPizzaIngCart: state.cartSlice.ownPizzaIngCart,\r\n       maxServing: state.cartSlice.maxServing\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addToPizzaCart: (ing) => dispatch({\r\n            type: \"ADD_TO_PIZZA_CART\",\r\n            payload: {ing}\r\n        })\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OwnPizzaIng);","import { connect } from \"react-redux\";\r\nimport OwnPizzaIng from \"./OwnPizzaIng\";\r\n\r\nconst OwnPizzaMenu = (props) => {\r\n    return(\r\n        <div>\r\n            <div className=\"menu-container own-pizza-box\">\r\n                <h2>Choose your toppings</h2>\r\n                <p>Max of {props.maxServing} servings per toppings.</p>\r\n                <div className=\"ing-choices\">\r\n                    {\r\n                        props.pizzaIng.filter(item => item.ingType === \"Toppings\")\r\n                        .map(ing =>\r\n                            <OwnPizzaIng\r\n                                key = {ing.name}\r\n                                ing = {ing}\r\n                            />\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        pizzaIng: state.ownPizzaSlice.pizzaIng,\r\n        maxServing: state.cartSlice.maxServing\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(OwnPizzaMenu);","export default __webpack_public_path__ + \"static/media/remove.f2ffd9d2.png\";","import { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Remove from \"../assets/imgs/remove.png\";\r\nimport Edit from \"../assets/imgs/edit.png\";\r\n\r\nconst MenuItem = (props) => {\r\n    let [qty, setQty] = useState(1);\r\n\r\n    const qtyChanger = (e) => {\r\n        setQty(e.target.value * 1)\r\n    };\r\n    const itemOrder = () => {\r\n        if (qty > 0) {\r\n            props.addToCart(props.menuItem, qty);\r\n        };\r\n        setQty(1);\r\n    };\r\n    const editBtnHandler = () => {\r\n        props.setEditBoxDisplay();\r\n        props.submitItemForEditing(props.menuItem);\r\n    }\r\n\r\n    let {id, name, price, category, image, status} = props.menuItem;\r\n    return(\r\n        <div className={\"menu-item-box \" + category}>\r\n            <div>\r\n                <img src={image} alt={id + \", \" + name + \", \" + status}/>\r\n            </div>\r\n            <div>\r\n                <p>{name}</p>\r\n                <p>Php {price}</p>\r\n                {\r\n                    props.currentUser.userType === \"customer\" ?\r\n                    <>\r\n                        <input\r\n                            type=\"number\"\r\n                            min=\"1\"\r\n                            className=\"quantity\"\r\n                            onChange={qtyChanger}\r\n                            value={qty}\r\n                        />\r\n                        <button onClick={itemOrder} className=\"order-btn\">Order</button>\r\n                    </>\r\n                    :\r\n                    <>\r\n                        {\r\n                            props.editItemBox === false ?\r\n                            <div className=\"admin-btns\">\r\n                                <span>{category}</span>\r\n                                <button onClick={editBtnHandler} className=\"crud-btn\">\r\n                                    <img src={Edit} alt=\"edit\" />\r\n                                </button>\r\n                                <button onClick={()=>props.deleteItem(name)} className=\"crud-btn\">\r\n                                    <img src={Remove} alt=\"remove\" />\r\n                                </button>\r\n                            </div>\r\n                            :\r\n                            null\r\n                        }\r\n                    </>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currentUser: state.loginSlice.currentUser,\r\n        editItemBox: state.menuSlice.editItemBox\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addToCart: (cartItem, qty) => dispatch({\r\n            type: \"ADD_TO_CART\",\r\n            payload: {\r\n                cartItem: cartItem,\r\n                quantity: qty\r\n            }\r\n        }),\r\n        deleteItem: (name) => dispatch({\r\n            type: \"DELETE_ITEM\",\r\n            payload: name\r\n        }),\r\n        setEditBoxDisplay: () => dispatch({\r\n            type: \"SET_EDIT_BOX_DISPLAY\"\r\n        }),\r\n        submitItemForEditing: (item) => dispatch({\r\n            type: \"SUBMIT_ITEM_FOR_EDITING\",\r\n            payload: item\r\n        })\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuItem);","import MenuItem from \"./MenuItem\";\r\nimport { useState, useEffect } from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst Menu = (props) => {\r\n    let [filteredMenu, setFilteredMenu] = useState([]);\r\n    let [category, setCategory] = useState(\"All\");\r\n\r\n    useEffect (\r\n        () => {setFilteredMenu([...props.origMenu])},\r\n        [props]\r\n    );\r\n    \r\n    const categorySelect = (e) => {\r\n        setCategory(e.target.value);\r\n        if (e.target.value === \"All\") {\r\n            setFilteredMenu(props.origMenu);\r\n        }\r\n        else {\r\n            setFilteredMenu(props.origMenu.filter( menuItem => menuItem.category === e.target.value))\r\n        };\r\n    }\r\n    \r\n    return(\r\n        <div>\r\n            <div className=\"menu-container\">\r\n                <h2>Menu for the Day</h2>\r\n                <div className=\"select-div\">\r\n                    <select onChange={categorySelect} value={category}>\r\n                        <option>All</option>\r\n                        <option>Food</option>\r\n                        <option>Drink</option>\r\n                    </select>\r\n                </div>\r\n                {\r\n                    filteredMenu.map( (menuItem) => \r\n                        <MenuItem\r\n                            key={menuItem.id}\r\n                            menuItem={menuItem}\r\n                        />\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currentUser: state.loginSlice.currentUser,\r\n        origMenu: state.menuSlice.origMenu\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Menu);","import \"./assets/resto.css\"\r\nimport {connect} from \"react-redux\";\r\n\r\nimport Banner from \"./banner-login/Banner\";\r\nimport Navigation from \"./banner-login/Navigation\";\r\nimport Login from \"./banner-login/Login\"\r\nimport Cart from \"./cart/Cart\";\r\nimport CrudMenu from \"./menu/CrudMenu\";\r\nimport OwnPizzaCart from \"./own-pizza/OwnPizzaCart\";\r\nimport OwnPizzaMenu from \"./own-pizza/OwnPizzaMenu\";\r\nimport Menu from \"./menu/Menu\";\r\n\r\nconst RestoApp = (props) => {\r\n    return (\r\n        <div className=\"main-box\">\r\n            <Banner />\r\n            <Navigation />       \r\n            <div className=\"body-div\">\r\n                <div>\r\n                    {props.activePage === \"Login\" ? <Login /> : null}\r\n                    {props.activePage === \"Menu\" ? <Menu /> : null}\r\n                    {props.activePage === \"Menu\" && props.currentUser.userType === \"customer\" ? <Cart /> : null}\r\n                    {props.activePage === \"Menu\" && props.currentUser.userType === \"admin\" ? <CrudMenu /> : null}\r\n                    {\r\n                        props.activePage === \"OwnPizza\" ?\r\n                        <>\r\n                            <OwnPizzaMenu />\r\n                            <OwnPizzaCart />\r\n                        </>\r\n                        :\r\n                        null\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currentUser: state.loginSlice.currentUser,\r\n        activePage: state.menuSlice.activePage\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(RestoApp);","import RestoApp from \"./components/RestoApp\";\nimport {Helmet, HelmetProvider} from \"react-helmet-async\";\n\nconst App = () => {\n  return (\n    <div>\n      <HelmetProvider>\n        <Helmet>\n          <title>Munch Time!</title>\n        </Helmet>\n        <RestoApp/>\n      </HelmetProvider>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import Lodash from \"lodash\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nlet mainPizzaIng = [\r\n    {\r\n        name: \"Dough\",\r\n        price: 150,\r\n        img: \"\",\r\n        qty: 1,\r\n        id: 1,\r\n        ingType: \"Main\"\r\n    },\r\n    {\r\n        name: \"Red Sauce\",\r\n        price: 80,\r\n        img: \"\",\r\n        qty: 1,\r\n        id: 2,\r\n        ingType: \"Main\"\r\n    }\r\n];\r\nlet mainPizzaIngTotal = 0;\r\nmainPizzaIng.forEach(ing => mainPizzaIngTotal += ing.price);\r\n\r\nconst initialState = {\r\n    cart: [],\r\n    total: 0,\r\n    ownPizzaIngCart: [...mainPizzaIng],\r\n    ownPizzaIngTotal: mainPizzaIngTotal,\r\n    mainPizzaIngLength: mainPizzaIng.length,\r\n    pizzaForEdit: null,\r\n    maxServing: 3,    \r\n}\r\n\r\nconst cartSlice = (state = initialState, action) => {\r\n    let newTotal;\r\n    let cartCopy;\r\n    let itemIndex;\r\n    let ownPizzaIngCartCopy;\r\n    switch(action.type) {\r\n        case \"ADD_TO_CART\":\r\n            newTotal = state.total + (action.payload.cartItem.price * action.payload.quantity);\r\n            cartCopy = Lodash.cloneDeep(state.cart);\r\n            itemIndex = cartCopy.findIndex((item) => item.id === action.payload.cartItem.id);\r\n            if (itemIndex >= 0 ) {\r\n                cartCopy[itemIndex].quantity += action.payload.quantity;\r\n            }\r\n            else {\r\n                action.payload.cartItem.quantity = action.payload.quantity;\r\n                cartCopy.push(action.payload.cartItem);\r\n            };\r\n            return {\r\n                ...state,\r\n                cart: cartCopy,\r\n                total: newTotal\r\n            };\r\n        case \"CLEAR_CART\":\r\n            return {\r\n                ...state,\r\n                cart: [],\r\n                total: 0\r\n            };\r\n        case \"REMOVE_ITEM\":\r\n            newTotal = state.total - (action.payload.quantity * action.payload.price);\r\n            cartCopy = [...state.cart];\r\n            itemIndex = cartCopy.findIndex((item) => item.id === action.payload.id);\r\n            cartCopy.splice(itemIndex, 1);\r\n            return {\r\n                ...state,\r\n                cart: cartCopy,\r\n                total: newTotal\r\n            };\r\n        case \"ADD_QTY\":\r\n            newTotal = state.total + action.payload.price;\r\n            cartCopy = [...state.cart];\r\n            cartCopy = cartCopy.map( item => {\r\n                let itemCopy = {...item};\r\n                if (item.id === action.payload.id) {\r\n                    itemCopy.quantity ++\r\n                }\r\n                return itemCopy\r\n            })\r\n            return {\r\n                ...state,\r\n                cart: cartCopy,\r\n                total: newTotal\r\n            };\r\n        case \"DEDUCT_QTY\":\r\n            newTotal = state.total - action.payload.price;\r\n            cartCopy = Lodash.cloneDeep(state.cart);\r\n            itemIndex = cartCopy.findIndex((item) => item.id === action.payload.id);\r\n            if (cartCopy[itemIndex].quantity === 1) {\r\n                cartCopy.splice(itemIndex, 1);\r\n            }\r\n            else {\r\n                cartCopy[itemIndex].quantity--;\r\n            };\r\n            return {\r\n                ...state,\r\n                cart: [...cartCopy],\r\n                total: newTotal\r\n            };\r\n        case \"ADD_TO_PIZZA_CART\":\r\n            newTotal = state.ownPizzaIngTotal + action.payload.ing.price;\r\n            ownPizzaIngCartCopy = Lodash.cloneDeep(state.ownPizzaIngCart);\r\n            itemIndex = ownPizzaIngCartCopy.findIndex((item) => item.name === action.payload.ing.name);\r\n            if (itemIndex >= 0 ) {\r\n                ownPizzaIngCartCopy[itemIndex].qty += 1;\r\n            }\r\n            else {\r\n                action.payload.ing.qty = 1;\r\n                ownPizzaIngCartCopy.push(action.payload.ing);\r\n            };\r\n            return {\r\n                ...state,\r\n                ownPizzaIngCart: ownPizzaIngCartCopy,\r\n                ownPizzaIngTotal: newTotal\r\n            };\r\n        case \"CLEAR_PIZZA_CART\":\r\n            return {\r\n                ...state,\r\n                ownPizzaIngCart: [...mainPizzaIng],\r\n                ownPizzaIngTotal: mainPizzaIngTotal\r\n            };\r\n        case \"DEDUCT_ING_ITEM\":\r\n            newTotal = state.ownPizzaIngTotal - action.payload.price;\r\n            ownPizzaIngCartCopy = Lodash.cloneDeep(state.ownPizzaIngCart);\r\n            itemIndex = ownPizzaIngCartCopy.findIndex((item) => item.name === action.payload.name);\r\n            if (ownPizzaIngCartCopy[itemIndex].qty === 1) {\r\n                ownPizzaIngCartCopy.splice(itemIndex, 1);\r\n            }\r\n            else {\r\n                ownPizzaIngCartCopy[itemIndex].qty--;\r\n            };\r\n            return {\r\n                ...state,\r\n                ownPizzaIngCart: [...ownPizzaIngCartCopy],\r\n                ownPizzaIngTotal: newTotal\r\n            };\r\n        case \"ADD_ING_QTY\":\r\n            newTotal = state.ownPizzaIngTotal + action.payload.price;\r\n            ownPizzaIngCartCopy = Lodash.cloneDeep(state.ownPizzaIngCart);\r\n            itemIndex = ownPizzaIngCartCopy.findIndex((item) => item.name === action.payload.name);\r\n            ownPizzaIngCartCopy[itemIndex].qty++\r\n            return {\r\n                ...state,\r\n                ownPizzaIngCart: ownPizzaIngCartCopy,\r\n                ownPizzaIngTotal: newTotal\r\n            };\r\n        case \"REMOVE_ING_ITEM\":\r\n            newTotal = state.ownPizzaIngTotal - (action.payload.qty * action.payload.price);\r\n            ownPizzaIngCartCopy = Lodash.cloneDeep(state.ownPizzaIngCart);\r\n            itemIndex = ownPizzaIngCartCopy.findIndex((item) => item.name === action.payload.name);\r\n            ownPizzaIngCartCopy.splice(itemIndex, 1);\r\n            return {\r\n                ...state,\r\n                ownPizzaIngCart: ownPizzaIngCartCopy,\r\n                ownPizzaIngTotal: newTotal\r\n            };\r\n        case \"ADD_PIZZA_TO_CART\":\r\n            cartCopy = Lodash.cloneDeep(state.cart);\r\n            let newItem = {\r\n                category: \"Food\",\r\n                categoryNum: 1,\r\n                subCtgry: \"OwnPizza\",\r\n                id: uuidv4(),\r\n                image: \"\",\r\n                name: action.payload.pizzaName,\r\n                price: state.ownPizzaIngTotal,\r\n                quantity: 1,\r\n                status: \"active\",\r\n                details: [...state.ownPizzaIngCart]\r\n            };\r\n            cartCopy.push(newItem);\r\n            newTotal = state.total + state.ownPizzaIngTotal\r\n            return {\r\n                ...state,\r\n                cart: cartCopy,\r\n                total: newTotal,\r\n                ownPizzaIngCart: [...mainPizzaIng],\r\n                ownPizzaIngTotal: mainPizzaIngTotal,\r\n            };\r\n        case \"RESEND_PIZZA_TO_CART\":\r\n            let pizzaForEditCopy = Lodash.cloneDeep(state.pizzaForEdit);\r\n            cartCopy = Lodash.cloneDeep(state.cart);\r\n            itemIndex = cartCopy.findIndex(item => item.id === pizzaForEditCopy.id);\r\n            newTotal = state.total + (cartCopy[itemIndex].quantity * (state.ownPizzaIngTotal - cartCopy[itemIndex].price))\r\n            pizzaForEditCopy.name = action.payload;\r\n            pizzaForEditCopy.price = state.ownPizzaIngTotal;\r\n            pizzaForEditCopy.details = [...state.ownPizzaIngCart];\r\n            cartCopy[itemIndex] = pizzaForEditCopy;\r\n            return {\r\n                ...state,\r\n                cart: cartCopy,\r\n                total: newTotal,\r\n                ownPizzaIngCart: [...mainPizzaIng],\r\n                ownPizzaIngTotal: mainPizzaIngTotal,\r\n                pizzaForEdit: null,\r\n            };\r\n        case \"SUBMIT_PIZZA_FOR_EDIT\":\r\n            return {\r\n                ...state,\r\n                ownPizzaIngCart: [...action.payload.details],\r\n                ownPizzaIngTotal: action.payload.price,\r\n                pizzaForEdit: action.payload\r\n            };\r\n        case \"CANCEL_EDIT\":\r\n            return {\r\n                ...state,\r\n                ownPizzaIngCart: [...mainPizzaIng],\r\n                ownPizzaIngTotal: mainPizzaIngTotal,\r\n                pizzaForEdit: null\r\n            }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default cartSlice;","import Lodash from \"lodash\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst initialState = {\r\n    origMenu: [\r\n        {\r\n            id: 1,\r\n            name: \"Burger\",\r\n            price: 50,\r\n            category: \"Food\",\r\n            categoryNum: 1,\r\n            status: 'active',\r\n            image: \"https://cdn-icons-png.flaticon.com/128/3075/3075977.png\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Pizza\",\r\n            price: 100,\r\n            category: \"Food\",\r\n            categoryNum: 1,\r\n            status: 'active',\r\n            image: \"https://cdn-icons-png.flaticon.com/128/3595/3595458.png\"\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Fries\",\r\n            price: 25,\r\n            category: \"Food\",\r\n            categoryNum: 1,\r\n            status: 'active',\r\n            image: \"https://cdn-icons-png.flaticon.com/128/1046/1046786.png\"\r\n        },\r\n        {\r\n            id: 4,\r\n            name: \"Coffee\",\r\n            price: 35,\r\n            category: \"Drink\",\r\n            categoryNum: 2,\r\n            status: 'active',\r\n            image: \"https://cdn-icons-png.flaticon.com/128/1046/1046785.png\"\r\n        },\r\n        {\r\n            id: 5,\r\n            name: \"Soda\",\r\n            price: 45,\r\n            category: \"Drink\",\r\n            categoryNum: 2,\r\n            status: 'active',\r\n            image: \"https://cdn-icons-png.flaticon.com/128/659/659334.png\"\r\n        },\r\n        {\r\n            id: 6,\r\n            name: \"Hot Tea\",\r\n            price: 45,\r\n            category: \"Drink\",\r\n            categoryNum: 2,\r\n            status: 'active',\r\n            image: \"https://cdn-icons-png.flaticon.com/512/3791/3791273.png\"\r\n        }\r\n    ],\r\n    categoryArray: [\r\n        {\r\n            categoryName: \"Food\",\r\n            categoryNum: 1,\r\n        },\r\n        {\r\n            categoryName: \"Drink\",\r\n            categoryNum: 2,\r\n        }\r\n    ],\r\n    editItemBox: false,\r\n    editItemMsg: \"\",\r\n    itemForEdit: {},\r\n    newItemBox: false,\r\n    newItemMsg: \"\",\r\n    activePage: \"Menu\"\r\n}\r\n\r\nconst menuSlice = (state = initialState, action) => {\r\n    let origMenuCopy;\r\n    let compare;\r\n    let itemIndex;\r\n    switch(action.type) {\r\n        case \"DELETE_ITEM\":\r\n            origMenuCopy = Lodash.cloneDeep(state.origMenu);\r\n            itemIndex = origMenuCopy.findIndex( item => item.name === action.payload);\r\n            origMenuCopy.splice(itemIndex, 1);\r\n            return {\r\n                ...state,\r\n                origMenu: origMenuCopy\r\n            };\r\n        case \"SET_NEW_ITEM_BOX_DISPLAY\":\r\n            return {\r\n                ...state,\r\n                newItemBox: !state.newItemBox,\r\n                newItemMsg: \"\"\r\n            };\r\n        case \"CREATE_NEW_ITEM\":\r\n            if (\r\n                action.payload.name.trim() === \"\" ||\r\n                action.payload.price === 0 ||\r\n                action.payload.category === \"\" ||\r\n                action.payload.image.trim() === \"\"\r\n            ) {\r\n                return {\r\n                    ...state,\r\n                    newItemMsg: \"Please complete all details.\"\r\n                }\r\n            } else {\r\n                origMenuCopy = Lodash.cloneDeep(state.origMenu);\r\n                action.payload.id = uuidv4();\r\n                origMenuCopy.push(action.payload);\r\n                compare = (a, b) => a.categoryNum - b.categoryNum;\r\n                origMenuCopy.sort(compare);\r\n                return {\r\n                    ...state,\r\n                    origMenu: origMenuCopy,\r\n                    newItemMsg: \"\",\r\n                    newItemBox: false\r\n                };\r\n            };\r\n        case \"SET_EDIT_BOX_DISPLAY\":\r\n            return {\r\n                ...state,\r\n                editItemBox: !state.editItemBox,\r\n                editItemMsg: \"\",\r\n                newItemBox: false,\r\n                itemForEdit: {}\r\n            };\r\n        case \"SUBMIT_ITEM_FOR_EDITING\":\r\n            return {\r\n                ...state,\r\n                itemForEdit: action.payload\r\n            };\r\n        case \"EDIT_ITEM\":\r\n            if (\r\n                action.payload.name.trim() === \"\" ||\r\n                action.payload.price === 0 ||\r\n                action.payload.category === \"\" ||\r\n                action.payload.image.trim() === \"\"\r\n            ) {\r\n                return {\r\n                    ...state,\r\n                    editItemMsg: \"Please complete all details.\"\r\n                }\r\n            } else {\r\n                origMenuCopy = Lodash.cloneDeep(state.origMenu);\r\n                itemIndex = origMenuCopy.findIndex( item => item.id === action.payload.id);\r\n                origMenuCopy[itemIndex] = action.payload;\r\n                compare = (a, b) => a.categoryNum - b.categoryNum;\r\n                origMenuCopy.sort(compare);\r\n                return {\r\n                    ...state,\r\n                    origMenu: origMenuCopy,\r\n                    editItemMsg: \"\",\r\n                    editItemBox: false\r\n                };\r\n            };\r\n        case \"LOGOUT_RESET\":\r\n            return {\r\n                ...state,\r\n                editItemBox: false,\r\n                editItemMsg: \"\",\r\n                itemForEdit: {},\r\n                newItemBox: false,\r\n                newItemMsg: \"\"\r\n            };\r\n        case \"ACTIVATE_PAGE\":\r\n            return {\r\n                ...state,\r\n                activePage: action.payload\r\n            };\r\n        default: return state;\r\n    };\r\n};\r\n\r\nexport default menuSlice;","let savedUsername = localStorage.getItem(\"username\");\r\nlet savedUserType = localStorage.getItem(\"userType\");\r\n\r\nconst initialState = {\r\n    users: [\r\n        {username: \"admin\", password: \"123\", userType: \"admin\"},\r\n        {username: \"uplift\", password: \"123\", userType: \"admin\"}\r\n    ],\r\n    currentUser: \r\n        savedUsername === null || savedUsername === \"\" ?\r\n        {\r\n            username: \"\",\r\n            userType: \"customer\",\r\n            msg: \"\",\r\n            errorMsg: \"\"\r\n        }\r\n        :\r\n        {\r\n            username: savedUsername,\r\n            userType: savedUserType,\r\n            msg: \"Hello, \" + savedUsername + \"!\",\r\n            errorMsg: \"\"\r\n        }\r\n}\r\n\r\nconst loginSlice = (state = initialState, action) => {\r\n    let currentUserCopy = {...state.currentUser};\r\n    let userIndex;\r\n    switch(action.type) {\r\n        case \"VALIDATE_USER\":\r\n            userIndex = state.users.findIndex(account => account.username === action.payload.username);\r\n            if (action.payload.username.trim() === \"\" || action.payload.password === \"\") {\r\n                currentUserCopy.errorMsg = \"Please complete all details.\";\r\n                currentUserCopy.userType = \"customer\";\r\n                currentUserCopy.username = \"\";\r\n                return {\r\n                    ...state,\r\n                    currentUser: currentUserCopy\r\n                }; \r\n            } else if (\r\n                userIndex >= 0 &&\r\n                state.users[userIndex].password === action.payload.password\r\n                ) {\r\n                    currentUserCopy.username = action.payload.username;\r\n                    currentUserCopy.userType = state.users[userIndex].userType;\r\n                    currentUserCopy.msg = \"Hello, \" + action.payload.username +\"!\";\r\n                    currentUserCopy.errorMsg = \"\";\r\n                    localStorage.setItem(\"username\", action.payload.username);\r\n                    localStorage.setItem(\"userType\", state.users[userIndex].userType);\r\n                return {\r\n                    ...state,\r\n                    currentUser: currentUserCopy\r\n                };\r\n            }\r\n            else {\r\n                currentUserCopy.userType = \"customer\";\r\n                currentUserCopy.errorMsg = \"Invalid login.\";\r\n                return {\r\n                    ...state,\r\n                    currentUser: currentUserCopy\r\n                }\r\n            };\r\n        case \"LOGOUT_USER\":\r\n            localStorage.clear();\r\n            currentUserCopy = {...state.currentUser};\r\n            currentUserCopy.username = \"\";\r\n            currentUserCopy.userType = \"customer\";\r\n            currentUserCopy.msg = \"\";\r\n            currentUserCopy.errorMsg = \"\";\r\n            return {\r\n                ...state,\r\n                currentUser: currentUserCopy,\r\n            };\r\n        case \"ADMIN_AUTO_LOGIN\":\r\n            currentUserCopy.username = \"admin\";\r\n            currentUserCopy.userType = \"admin\";\r\n            currentUserCopy.msg = \"Hello, admin!\";\r\n            currentUserCopy.errorMsg = \"\";\r\n            localStorage.setItem(\"username\", \"admin\");\r\n            localStorage.setItem(\"userType\", \"admin\");\r\n            return {\r\n                ...state,\r\n                currentUser: currentUserCopy\r\n            };\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default loginSlice;","import Bacon  from \"../components/assets/imgs/pizzaIng/Bacon.PNG\";\r\nimport Beef  from \"../components/assets/imgs/pizzaIng/Beef.PNG\";\r\nimport GreenBellPepper  from \"../components/assets/imgs/pizzaIng/Green-Bell-Pepper.PNG\";\r\nimport Ham  from \"../components/assets/imgs/pizzaIng/Ham.PNG\";\r\nimport MozzarellaCheese  from \"../components/assets/imgs/pizzaIng/Mozzarella-Cheese.PNG\";\r\nimport ParsleyLeaves  from \"../components/assets/imgs/pizzaIng/Parsley-Leaves.PNG\";\r\nimport Pepperoni  from \"../components/assets/imgs/pizzaIng/Pepperoni.PNG\";\r\nimport PineappleChunks  from \"../components/assets/imgs/pizzaIng/Pineapple-Chunks.PNG\";\r\nimport Mushroom  from \"../components/assets/imgs/pizzaIng/mushroom.png\";\r\n\r\nconst initialState = {\r\n    pizzaIng: [\r\n        {\r\n            name: \"Bacon\",\r\n            price: 100,\r\n            img: Bacon,\r\n            id: 3,\r\n            ingType: \"Toppings\"\r\n        },\r\n        {\r\n            name: \"Beef\",\r\n            price: 120,\r\n            img: Beef,\r\n            id: 4,\r\n            ingType: \"Toppings\"\r\n        },\r\n        {\r\n            name: \"Bell Pepper\",\r\n            price: 50,\r\n            img: GreenBellPepper,\r\n            id: 5,\r\n            ingType: \"Toppings\"\r\n        },\r\n        {\r\n            name: \"Ham\",\r\n            price: 100,\r\n            img: Ham,\r\n            id: 6,\r\n            ingType: \"Toppings\"\r\n        },\r\n        {\r\n            name: \"Mozzarella\",\r\n            price: 150,\r\n            img: MozzarellaCheese,\r\n            id: 7,\r\n            ingType: \"Toppings\"\r\n        },\r\n        {\r\n            name: \"Parsley\",\r\n            price: 20,\r\n            img: ParsleyLeaves,\r\n            id: 8,\r\n            ingType: \"Toppings\"\r\n        },\r\n        {\r\n            name: \"Pepperoni\",\r\n            price: 120,\r\n            img: Pepperoni,\r\n            id: 9,\r\n            ingType: \"Toppings\"\r\n        },\r\n        {\r\n            name: \"Pineapple\",\r\n            price: 50,\r\n            img: PineappleChunks,\r\n            id: 10,\r\n            ingType: \"Toppings\"\r\n        },\r\n        {\r\n            name: \"Mushroom\",\r\n            price: 30,\r\n            img: Mushroom,\r\n            id: 11,\r\n            ingType: \"Toppings\"\r\n        }\r\n    ]\r\n}\r\n\r\nconst ownPizzaSlice = (state = initialState, action) => {\r\n    return {\r\n        ...state\r\n    }\r\n}\r\n\r\nexport default ownPizzaSlice;","export default __webpack_public_path__ + \"static/media/Bacon.e459c4a7.PNG\";","export default __webpack_public_path__ + \"static/media/Beef.2cc7a543.PNG\";","export default __webpack_public_path__ + \"static/media/Green-Bell-Pepper.84bcfac5.PNG\";","export default __webpack_public_path__ + \"static/media/Ham.8a5e84e0.PNG\";","export default __webpack_public_path__ + \"static/media/Mozzarella-Cheese.3705d76b.PNG\";","export default __webpack_public_path__ + \"static/media/Parsley-Leaves.f22f89c0.PNG\";","export default __webpack_public_path__ + \"static/media/Pepperoni.d8d4d9d1.PNG\";","export default __webpack_public_path__ + \"static/media/Pineapple-Chunks.cd14b9a7.PNG\";","export default __webpack_public_path__ + \"static/media/mushroom.fa9db136.png\";","import { combineReducers } from \"redux\";\r\nimport cartSlice from \"./cartSlice\";\r\nimport menuSlice from \"./menuSlice\";\r\nimport loginSlice from \"./loginSlice\";\r\nimport ownPizzaSlice from \"./ownPizzaSlice\";\r\n\r\nconst rootReducer = combineReducers({\r\n    loginSlice: loginSlice,\r\n    menuSlice: menuSlice,\r\n    cartSlice: cartSlice,\r\n    ownPizzaSlice: ownPizzaSlice\r\n})\r\n\r\nexport default rootReducer;","import {createStore} from \"redux\";\r\nimport reducer from \"./reducer\"\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}